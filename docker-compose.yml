services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: web_platform
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  minio-setup:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until mc alias set local http://minio:9000 minioadmin minioadmin; do echo 'waiting for minio...'; sleep 1; done && \
      mc mb --ignore-existing local/coursekit && \
      mc anonymous set download local/coursekit/public/* && \
      echo 'MinIO bucket ready'"

  web:
    build: .
    depends_on:
      - db
      - minio
      - minio-setup
      - qdrant
    ports:
      - "3000:3000"
    env_file:
      - .env
    volumes:
      - ./backups:/app/backups
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/web_platform?schema=public
      NEXT_PUBLIC_APP_URL: http://localhost:3000
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      QDRANT_URL: ${QDRANT_URL:-http://qdrant:6333}
      QDRANT_API_KEY: ${QDRANT_API_KEY:-}
      # MinIO Configuration
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_SSL: "false"
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: coursekit
      # For internal Docker network
      MINIO_PUBLIC_URL: http://localhost:9000
    command: sh -c "echo '⏳ Waiting for database to be ready...' && until PGPASSWORD=postgres pg_isready -h db -U postgres; do sleep 1; done && echo '🔄 Creating database backup...' && mkdir -p /app/backups && PGPASSWORD=postgres pg_dump -h db -U postgres -d web_platform > /app/backups/backup_$(date +%Y%m%d_%H%M%S).sql && echo '✅ Backup created' && echo '🚀 Syncing database schema...' && npx prisma db push && echo '✅ Database sync complete' && npm run start"

  qdrant:
    image: qdrant/qdrant:latest
    restart: unless-stopped
    ports:
      - "6333:6333"
    volumes:
      - qdrant-data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db-data:
  minio-data:
  qdrant-data:


